Search.setIndex({"docnames": ["README", "api/index", "api/merlin.dag", "api/merlin.io", "api/merlin.schema", "index"], "filenames": ["README.md", "api/index.rst", "api/merlin.dag.rst", "api/merlin.io.rst", "api/merlin.schema.rst", "index.rst"], "titles": ["Merlin Core", "merlin namespace", "merlin.dag package", "merlin.io package", "merlin.schema package", "Merlin Core"], "terms": {"The": [0, 2, 3, 4, 5], "librari": [0, 3, 5], "provid": [0, 2, 4, 5], "util": [0, 5], "nvidia": [0, 5], "like": [0, 2, 3], "nvtabular": [0, 3], "transformers4rec": 0, "model": 0, "For": [0, 3], "exampl": [0, 3], "io": [0, 1], "dataset": [0, 1, 2, 3, 4], "merin": 0, "schema": [0, 1, 2, 3], "class": [0, 2, 3, 4, 5], "ar": [0, 2, 3, 4], "fundament": 0, "work": [0, 2], "data": [0, 2, 3], "build": 0, "recommend": [0, 3], "system": [0, 3], "c": 0, "rapidsai": 0, "numba": 0, "forg": 0, "python": 0, "3": 0, "7": 0, "cudatoolkit": 0, "11": 0, "2": 0, "As": 0, "i": [0, 2, 3, 4, 5], "includ": [0, 3], "contain": [0, 2, 3, 4], "refer": [0, 3], "document": [0, 3, 5], "page": 0, "inform": [0, 3, 5], "about": [0, 5], "name": [0, 1, 2, 3, 4], "url": 0, "imag": 0, "gpu": [0, 3], "cloud": [0, 3], "catalog": 0, "kei": [0, 3], "compon": 0, "To": [0, 3, 5], "report": 0, "bug": 0, "get": [0, 1, 3, 4], "help": 0, "pleas": 0, "open": 0, "an": [0, 2, 3], "issu": 0, "github": [0, 5], "repo": 0, "dag": 1, "packag": 1, "baseoper": [1, 2], "compute_selector": [1, 2], "compute_input_schema": [1, 2], "compute_output_schema": [1, 2], "validate_schema": [1, 2], "transform": [1, 2, 3], "column_map": [1, 2], "compute_column_schema": [1, 2], "dynamic_dtyp": [1, 2], "output_column_nam": [1, 2], "depend": [1, 2], "output_dtyp": [1, 2], "output_tag": [1, 2], "output_properti": [1, 2], "label": [1, 2, 3], "create_nod": [1, 2], "support": [1, 2, 3], "graph": [1, 2, 3], "subgraph": [1, 2, 3], "input_dtyp": [1, 2], "construct_schema": [1, 2], "input_schema": [1, 2], "leaf_nod": [1, 2], "output_schema": [1, 2], "remove_input": [1, 2], "get_nodes_by_op_typ": [1, 2], "node": [1, 2], "selector": [1, 2, 4], "add_depend": [1, 2], "add_par": [1, 2], "add_child": [1, 2], "remove_child": [1, 2], "compute_schema": [1, 2], "export": [1, 2], "parents_with_depend": [1, 2], "grouped_parents_with_depend": [1, 2], "input_column": [1, 2], "output_column": [1, 2], "dependency_column": [1, 2], "nodabl": [1, 2], "construct_from": [1, 2], "columnselector": [1, 2, 4], "tag": [1, 2, 4], "grouped_nam": [1, 2], "resolv": [1, 2], "filter_column": [1, 2], "to_ddf": [1, 3], "file_partition_map": [1, 3], "partition_len": [1, 3], "to_cpu": [1, 3], "to_gpu": [1, 3], "shuffle_by_kei": [1, 3], "repartit": [1, 3], "merg": [1, 3], "to_it": [1, 3], "to_parquet": [1, 3], "to_hugectr": [1, 3], "num_row": [1, 3], "comput": [1, 2, 3], "head": [1, 3], "npartit": [1, 3], "persist": [1, 3], "tail": [1, 3], "validate_dataset": [1, 3], "regenerate_dataset": [1, 3], "infer_schema": [1, 3], "sample_dtyp": [1, 3], "column_nam": [1, 4], "select": [1, 2, 4], "appli": [1, 2, 4], "exclud": [1, 4], "apply_invers": [1, 4], "select_by_tag": [1, 4], "excluding_by_tag": [1, 4], "remove_by_tag": [1, 4], "select_by_nam": [1, 4], "excluding_by_nam": [1, 4], "remove_col": [1, 4], "without": [1, 4], "first": [1, 3, 4], "to_panda": [1, 4], "columnschema": [1, 4], "properti": [1, 2, 3, 4], "dtype": [1, 2, 3, 4], "is_list": [1, 4], "is_rag": [1, 4], "dim": [1, 4], "shape": [1, 4], "with_nam": [1, 4], "with_tag": [1, 4], "with_properti": [1, 4], "with_dtyp": [1, 4], "with_shap": [1, 4], "int_domain": [1, 4], "float_domain": [1, 4], "value_count": [1, 4], "categor": [1, 3, 4], "continu": [1, 3, 4], "list": [1, 2, 3, 4], "sequenc": [1, 4], "text": [1, 4], "token": [1, 4], "time": [1, 3, 4], "id": [1, 4], "user": [1, 3, 4], "item": [1, 4], "session": [1, 4], "context": [1, 4], "target": [1, 4], "regress": [1, 4], "classif": [1, 4], "binari": [1, 4], "multi_class": [1, 4], "user_id": [1, 4], "item_id": [1, 4], "session_id": [1, 4], "text_token": [1, 4], "binary_classif": [1, 4], "multi_class_classif": [1, 4], "sourc": [2, 3, 4], "base": [2, 3, 4], "object": [2, 3, 4], "all": [2, 3], "oper": [2, 3], "parents_selector": 2, "none": [2, 3, 4], "dependencies_selector": 2, "hook": 2, "method": [2, 3], "sub": 2, "overrid": [2, 3], "implement": [2, 3], "custom": [2, 3], "column": [2, 3, 4], "logic": [2, 3], "paramet": [2, 3, 4], "thi": [2, 3, 4], "input": [2, 3], "combin": [2, 3], "upstream": 2, "parent": 2, "feed": 2, "return": [2, 3, 4], "revis": 2, "type": [2, 3, 4], "root_schema": 2, "parents_schema": 2, "deps_schema": 2, "given": 2, "come": 2, "from": [2, 3, 4], "set": [2, 3, 4], "us": [2, 3, 4], "befor": [2, 3], "run": 2, "ani": [2, 3], "col_selector": 2, "prev_output_schema": 2, "produc": [2, 3], "strict_dtyp": 2, "bool": [2, 3, 4], "fals": [2, 3], "can": [2, 3], "valid": [2, 3], "should": [2, 3], "rais": [2, 4], "except": 2, "thei": 2, "boolean": 2, "option": [2, 3], "enabl": 2, "strict": 2, "check": 2, "match": [2, 3, 4], "true": [2, 3], "default": [2, 3, 4], "datafram": [2, 3, 4], "A": [2, 3, 4], "panda": [2, 3, 4], "cudf": [2, 3], "dictarrai": 2, "which": [2, 3, 4], "output": [2, 3], "map": [2, 3], "reli": 2, "dict": [2, 3, 4], "str": [2, 3, 4], "col_nam": [2, 4], "defin": [2, 3], "let": 2, "you": [2, 3, 4], "consum": 2, "aren": 2, "t": [2, 3], "part": 2, "main": [2, 3], "workflow": [2, 3], "extra": 2, "what": 2, "kind": 2, "represent": 2, "output_nod": 2, "repres": 2, "compos": 2, "each": [2, 3], "preserve_dtyp": 2, "determin": [2, 3], "whether": [2, 3, 4], "keep": [2, 3], "mai": [2, 3], "alreadi": [2, 3], "present": [2, 4], "after": [2, 3, 4], "have": [2, 4], "been": 2, "fill": 2, "to_remov": 2, "remov": [2, 4], "start": [2, 5], "leaf": 2, "trickl": 2, "down": [2, 3, 4], "look": [2, 3], "when": [2, 3], "found": [2, 4], "must": [2, 3, 4], "propag": 2, "other": [2, 3], "deriv": [2, 3], "array_lik": 2, "same": [2, 3], "classmethod": [2, 3], "op_typ": 2, "group": [2, 3], "want": [2, 4], "": [2, 3], "shift": 2, "them": 2, "new": [2, 3, 4], "make": 2, "up": 2, "your": 2, "dep": 2, "ad": 2, "union": [2, 4], "child": 2, "we": [2, 3], "don": 2, "current": [2, 3], "If": [2, 3, 4], "error": 2, "valueerror": [2, 4], "expect": 2, "doesn": 2, "input_col": 2, "were": 2, "backend": [2, 3], "alia": 2, "convert": [2, 3, 4], "correspond": [2, 3], "typeerror": [2, 4], "suppli": 2, "cannot": [2, 3], "subgroup": 2, "describ": [2, 4], "tupl": [2, 4], "element": 2, "string": [2, 3], "indic": [2, 3], "most": 2, "case": [2, 3, 4], "also": [2, 3], "featur": [2, 3], "cross": 2, "altern": [2, 3], "syntax": 2, "togeth": [2, 5], "instead": 2, "nest": [2, 3], "insid": 2, "take": [2, 3], "how": [2, 3], "occur": 2, "doe": [2, 3], "matter": 2, "other_selector": 2, "narrow": 2, "content": 2, "would": 2, "anoth": 2, "filter": [2, 3], "path_or_sourc": 3, "engin": 3, "part_siz": 3, "part_mem_fract": 3, "storage_opt": 3, "client": 3, "auto": 3, "cpu": 3, "base_dataset": 3, "kwarg": 3, "univers": 3, "extern": 3, "wrapper": 3, "dataload": 3, "relat": 3, "api": 3, "requir": 3, "purpos": 3, "abstract": 3, "awai": 3, "raw": 3, "format": 3, "allow": 3, "reliabl": 3, "materi": 3, "dask_cudf": 3, "collect": [3, 4], "iter": 3, "demand": 3, "initi": 3, "varieti": 3, "differ": [3, 4], "directori": 3, "path": 3, "file": 3, "argument": 3, "specifi": 3, "either": [3, 4], "parquet": 3, "csv": 3, "suffix": 3, "infer": 3, "data_pq": 3, "file_0": 3, "file_1": 3, "sinc": 3, "leverag": 3, "fsspec": 3, "interfac": 3, "underli": 3, "store": 3, "local": 3, "remot": 3, "read": 3, "storag": 3, "gd": 3, "s3": 3, "appropri": 3, "protocol": 3, "prepend": 3, "special": 3, "pass": 3, "dictionari": 3, "bucket": 3, "anon": 3, "use_ssl": 3, "By": 3, "both": 3, "dask": 3, "maximum": 3, "partit": 3, "size": 3, "roughli": 3, "12": 3, "5": 3, "percent": 3, "total": 3, "memori": 3, "singl": [3, 4], "devic": 3, "chang": 3, "fraction": 3, "specif": 3, "byte": 3, "10": 3, "smaller": 3, "bigfil": 3, "0": 3, "1": 3, "1gb": 3, "note": 3, "liter": 3, "preced": 3, "done": 3, "row": [3, 4], "level": 3, "convers": 3, "therefor": 3, "distribut": 3, "uniform": 3, "balanc": 3, "In": 3, "addit": 3, "handl": 3, "disk": 3, "exist": 3, "e": 3, "g": 3, "number": 3, "modifi": 3, "That": 3, "pyarrow": 3, "tabl": 3, "while": 3, "preserv": 3, "creat": [3, 4], "gdf": 3, "ddf": 3, "read_parquet": 3, "ingest": 3, "straightforward": 3, "execut": 3, "mean": 3, "some": 3, "complex": 3, "pre": 3, "process": 3, "yet": 3, "still": 3, "accomplish": 3, "sort": 3, "final": 3, "warn": 3, "global": 3, "signific": 3, "sort_valu": 3, "user_rank": 3, "ignore_index": 3, "optim": 3, "tip": 3, "dot": 3, "order": 3, "best": 3, "possibl": 3, "perform": 3, "prefer": 3, "around": 3, "128mb": 3, "over": 3, "twice": 3, "slow": 3, "notebook": 3, "origin": 3, "criteo": 3, "pd": [3, 4], "structur": 3, "flat": 3, "datasetengin": 3, "identifi": 3, "avro": 3, "ignor": 3, "int": 3, "desir": 3, "calcul": 3, "float": 3, "125": 3, "rel": 3, "capac": 3, "directli": 3, "valu": [3, 4], "host": 3, "detect": 3, "further": 3, "experiment": 3, "intern": 3, "unless": 3, "instal": 3, "futur": 3, "NOT": 3, "avail": [3, 5], "stream": 3, "op": 3, "do": 3, "gener": 3, "construct": 3, "instanc": 3, "behavior": 3, "word": 3, "through": 3, "function": 3, "notabl": 3, "aggregate_fil": 3, "latter": 3, "shuffl": 3, "seed": 3, "known": 3, "within": 3, "becaus": 3, "actual": 3, "load": 3, "random": 3, "noth": 3, "std": 3, "hive_data": 3, "so": 3, "uniqu": 3, "move": 3, "back": 3, "hive": 3, "encod": 3, "inspect": 3, "otherwis": 3, "count": 3, "partition_s": 3, "onli": [3, 4], "isn": 3, "max": 3, "5mb": 3, "left": 3, "right": 3, "two": 3, "attribut": 3, "side": 3, "see": [3, 5], "more": [3, 5], "usag": 3, "ds_1": 3, "ds_2": 3, "ds_merg": 3, "foo": 3, "inner": 3, "use_file_metadata": 3, "epoch": 3, "those": 3, "dataframeit": 3, "metadata": [3, 4], "estim": 3, "intermedi": 3, "ha": 3, "multi": 3, "output_path": 3, "preserve_fil": 3, "output_fil": 3, "out_files_per_proc": 3, "num_thread": 3, "cat": 3, "cont": 3, "partition_on": 3, "write_hugectr_keyset": 3, "write": 3, "out": 3, "enum": [3, 4], "than": 3, "randomli": 3, "per_partit": 3, "worker": 3, "split": 3, "append": 3, "distinctli": 3, "per_work": 3, "follow": 3, "procedur": 3, "re": 3, "result": 3, "full": 3, "improv": 3, "bytesio": 3, "stage": 3, "multipli": 3, "control": 3, "integ": 3, "alwai": 3, "thread": 3, "dedic": 3, "datatyp": 3, "extens": 3, "orc": 3, "old": 3, "replac": 3, "algorithm": 3, "parallel": 3, "minim": 3, "pressur": 3, "segment": 3, "task": 3, "distinct": 3, "Then": 3, "larg": 3, "ideal": 3, "priorit": 3, "concurr": 3, "approach": 3, "hugectr": 3, "keyset": 3, "_hugectr": 3, "veri": 3, "plan": 3, "written": 3, "output_files_per_proc": 3, "per": 3, "arg": 3, "effici": 3, "meet": 3, "now": 3, "criteria": 3, "assert": 3, "add_metadata_fil": 3, "row_group_max_s": 3, "file_min_s": 3, "require_metadata_fil": 3, "parquetdatasetengin": 3, "output_format": 3, "regener": 3, "contrast": 3, "out_path": 3, "1mib": 3, "file_s": 3, "10mib": 3, "root": 3, "subset": 3, "delai": 3, "n": 3, "sampl": 3, "annotate_list": 3, "real": 3, "cach": 3, "wa": 3, "call": 3, "column_schema": 4, "non": 4, "retriev": 4, "where": 4, "via": 4, "just": 4, "tagset": 4, "factori": 4, "dataclass": 4, "initvar": 4, "copi": 4, "np": 4, "vari": 4, "length": 4, "domain": 4, "standard": 4, "ecosystem": 4, "project": 5, "learn": 5, "introduct": 5, "repositori": 5, "overarch": 5, "bring": 5, "develop": 5, "websit": 5, "our": 5, "http": 5, "com": 5}, "objects": {"": [[1, 0, 0, "-", "merlin"]], "merlin.dag": [[2, 1, 1, "", "BaseOperator"], [2, 1, 1, "", "ColumnSelector"], [2, 1, 1, "", "Graph"], [2, 1, 1, "", "Node"]], "merlin.dag.BaseOperator": [[2, 2, 1, "", "column_mapping"], [2, 2, 1, "", "compute_column_schema"], [2, 2, 1, "", "compute_input_schema"], [2, 2, 1, "", "compute_output_schema"], [2, 2, 1, "", "compute_selector"], [2, 2, 1, "", "create_node"], [2, 3, 1, "", "dependencies"], [2, 3, 1, "", "dynamic_dtypes"], [2, 3, 1, "", "label"], [2, 2, 1, "", "output_column_names"], [2, 3, 1, "", "output_dtype"], [2, 3, 1, "", "output_properties"], [2, 3, 1, "", "output_tags"], [2, 3, 1, "", "supports"], [2, 2, 1, "", "transform"], [2, 2, 1, "", "validate_schemas"]], "merlin.dag.ColumnSelector": [[2, 2, 1, "", "filter_columns"], [2, 3, 1, "", "grouped_names"], [2, 3, 1, "", "names"], [2, 2, 1, "", "resolve"], [2, 3, 1, "", "tags"]], "merlin.dag.Graph": [[2, 3, 1, "", "column_mapping"], [2, 2, 1, "", "construct_schema"], [2, 2, 1, "", "get_nodes_by_op_type"], [2, 3, 1, "", "input_dtypes"], [2, 3, 1, "", "input_schema"], [2, 3, 1, "", "leaf_nodes"], [2, 3, 1, "", "output_dtypes"], [2, 3, 1, "", "output_schema"], [2, 2, 1, "", "remove_inputs"], [2, 2, 1, "", "subgraph"]], "merlin.dag.Node": [[2, 4, 1, "", "Nodable"], [2, 2, 1, "", "add_child"], [2, 2, 1, "", "add_dependency"], [2, 2, 1, "", "add_parent"], [2, 3, 1, "", "column_mapping"], [2, 2, 1, "", "compute_schemas"], [2, 2, 1, "", "construct_from"], [2, 3, 1, "", "dependency_columns"], [2, 2, 1, "", "exportable"], [2, 3, 1, "", "graph"], [2, 3, 1, "", "grouped_parents_with_dependencies"], [2, 3, 1, "", "input_columns"], [2, 3, 1, "", "label"], [2, 3, 1, "", "output_columns"], [2, 3, 1, "", "parents_with_dependencies"], [2, 2, 1, "", "remove_child"], [2, 2, 1, "", "remove_inputs"], [2, 3, 1, "", "selector"], [2, 2, 1, "", "validate_schemas"]], "merlin.io": [[3, 1, 1, "", "Dataset"]], "merlin.io.Dataset": [[3, 2, 1, "", "compute"], [3, 3, 1, "", "file_partition_map"], [3, 2, 1, "", "head"], [3, 2, 1, "", "infer_schema"], [3, 2, 1, "", "merge"], [3, 3, 1, "", "npartitions"], [3, 3, 1, "", "num_rows"], [3, 3, 1, "", "partition_lens"], [3, 2, 1, "", "persist"], [3, 2, 1, "", "regenerate_dataset"], [3, 2, 1, "", "repartition"], [3, 2, 1, "", "sample_dtypes"], [3, 2, 1, "", "shuffle_by_keys"], [3, 2, 1, "", "tail"], [3, 2, 1, "", "to_cpu"], [3, 2, 1, "", "to_ddf"], [3, 2, 1, "", "to_gpu"], [3, 2, 1, "", "to_hugectr"], [3, 2, 1, "", "to_iter"], [3, 2, 1, "", "to_parquet"], [3, 2, 1, "", "validate_dataset"]], "merlin.schema": [[4, 1, 1, "", "ColumnSchema"], [4, 1, 1, "", "Schema"], [4, 1, 1, "", "Tags"]], "merlin.schema.ColumnSchema": [[4, 4, 1, "", "dims"], [4, 4, 1, "", "dtype"], [4, 3, 1, "", "float_domain"], [4, 3, 1, "", "int_domain"], [4, 4, 1, "", "is_list"], [4, 4, 1, "", "is_ragged"], [4, 4, 1, "", "name"], [4, 4, 1, "", "properties"], [4, 3, 1, "", "shape"], [4, 4, 1, "", "tags"], [4, 3, 1, "", "value_count"], [4, 2, 1, "", "with_dtype"], [4, 2, 1, "", "with_name"], [4, 2, 1, "", "with_properties"], [4, 2, 1, "", "with_shape"], [4, 2, 1, "", "with_tags"]], "merlin.schema.Schema": [[4, 2, 1, "", "apply"], [4, 2, 1, "", "apply_inverse"], [4, 3, 1, "", "column_names"], [4, 2, 1, "", "excluding"], [4, 2, 1, "", "excluding_by_name"], [4, 2, 1, "", "excluding_by_tag"], [4, 3, 1, "", "first"], [4, 2, 1, "", "get"], [4, 2, 1, "", "remove_by_tag"], [4, 2, 1, "", "remove_col"], [4, 2, 1, "", "select"], [4, 2, 1, "", "select_by_name"], [4, 2, 1, "", "select_by_tag"], [4, 2, 1, "", "to_pandas"], [4, 2, 1, "", "without"]], "merlin.schema.Tags": [[4, 4, 1, "", "BINARY"], [4, 4, 1, "", "BINARY_CLASSIFICATION"], [4, 4, 1, "", "CATEGORICAL"], [4, 4, 1, "", "CLASSIFICATION"], [4, 4, 1, "", "CONTEXT"], [4, 4, 1, "", "CONTINUOUS"], [4, 4, 1, "", "ID"], [4, 4, 1, "", "ITEM"], [4, 4, 1, "", "ITEM_ID"], [4, 4, 1, "", "LIST"], [4, 4, 1, "", "MULTI_CLASS"], [4, 4, 1, "", "MULTI_CLASS_CLASSIFICATION"], [4, 4, 1, "", "REGRESSION"], [4, 4, 1, "", "SEQUENCE"], [4, 4, 1, "", "SESSION"], [4, 4, 1, "", "SESSION_ID"], [4, 4, 1, "", "TARGET"], [4, 4, 1, "", "TEXT"], [4, 4, 1, "", "TEXT_TOKENIZED"], [4, 4, 1, "", "TIME"], [4, 4, 1, "", "TOKENIZED"], [4, 4, 1, "", "USER"], [4, 4, 1, "", "USER_ID"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"merlin": [0, 1, 2, 3, 4, 5], "core": [0, 5], "instal": 0, "us": 0, "pip": 0, "conda": 0, "run": 0, "docker": 0, "feedback": 0, "support": 0, "namespac": 1, "subpackag": 1, "dag": 2, "packag": [2, 3, 4], "io": 3, "schema": 4, "relat": 5, "resourc": 5, "index": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Merlin Core": [[0, "merlin-core"], [5, "merlin-core"]], "Installation": [[0, "installation"]], "Installing Merlin Core Using Pip": [[0, "installing-merlin-core-using-pip"]], "Installing Merlin Core Using Conda": [[0, "installing-merlin-core-using-conda"]], "Running Merlin Core with Docker": [[0, "running-merlin-core-with-docker"]], "Feedback and Support": [[0, "feedback-and-support"]], "merlin namespace": [[1, "merlin-namespace"]], "Subpackages": [[1, "subpackages"]], "merlin.dag package": [[2, "merlin-dag-package"]], "merlin.io package": [[3, "merlin-io-package"]], "merlin.schema package": [[4, "merlin-schema-package"]], "Related Resources": [[5, "related-resources"]], "Index": [[5, "index"]]}, "indexentries": {"merlin": [[1, "module-merlin"]], "module": [[1, "module-merlin"]], "baseoperator (class in merlin.dag)": [[2, "merlin.dag.BaseOperator"]], "columnselector (class in merlin.dag)": [[2, "merlin.dag.ColumnSelector"]], "graph (class in merlin.dag)": [[2, "merlin.dag.Graph"]], "nodable (merlin.dag.node attribute)": [[2, "merlin.dag.Node.Nodable"]], "node (class in merlin.dag)": [[2, "merlin.dag.Node"]], "add_child() (merlin.dag.node method)": [[2, "merlin.dag.Node.add_child"]], "add_dependency() (merlin.dag.node method)": [[2, "merlin.dag.Node.add_dependency"]], "add_parent() (merlin.dag.node method)": [[2, "merlin.dag.Node.add_parent"]], "column_mapping (merlin.dag.graph property)": [[2, "merlin.dag.Graph.column_mapping"]], "column_mapping (merlin.dag.node property)": [[2, "merlin.dag.Node.column_mapping"]], "column_mapping() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.column_mapping"]], "compute_column_schema() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.compute_column_schema"]], "compute_input_schema() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.compute_input_schema"]], "compute_output_schema() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.compute_output_schema"]], "compute_schemas() (merlin.dag.node method)": [[2, "merlin.dag.Node.compute_schemas"]], "compute_selector() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.compute_selector"]], "construct_from() (merlin.dag.node class method)": [[2, "merlin.dag.Node.construct_from"]], "construct_schema() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.construct_schema"]], "create_node() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.create_node"]], "dependencies (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.dependencies"]], "dependency_columns (merlin.dag.node property)": [[2, "merlin.dag.Node.dependency_columns"]], "dynamic_dtypes (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.dynamic_dtypes"]], "exportable() (merlin.dag.node method)": [[2, "merlin.dag.Node.exportable"]], "filter_columns() (merlin.dag.columnselector method)": [[2, "merlin.dag.ColumnSelector.filter_columns"]], "get_nodes_by_op_type() (merlin.dag.graph class method)": [[2, "merlin.dag.Graph.get_nodes_by_op_type"]], "graph (merlin.dag.node property)": [[2, "merlin.dag.Node.graph"]], "grouped_names (merlin.dag.columnselector property)": [[2, "merlin.dag.ColumnSelector.grouped_names"]], "grouped_parents_with_dependencies (merlin.dag.node property)": [[2, "merlin.dag.Node.grouped_parents_with_dependencies"]], "input_columns (merlin.dag.node property)": [[2, "merlin.dag.Node.input_columns"]], "input_dtypes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.input_dtypes"]], "input_schema (merlin.dag.graph property)": [[2, "merlin.dag.Graph.input_schema"]], "label (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.label"]], "label (merlin.dag.node property)": [[2, "merlin.dag.Node.label"]], "leaf_nodes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.leaf_nodes"]], "names (merlin.dag.columnselector property)": [[2, "merlin.dag.ColumnSelector.names"]], "output_column_names() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.output_column_names"]], "output_columns (merlin.dag.node property)": [[2, "merlin.dag.Node.output_columns"]], "output_dtype (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.output_dtype"]], "output_dtypes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.output_dtypes"]], "output_properties (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.output_properties"]], "output_schema (merlin.dag.graph property)": [[2, "merlin.dag.Graph.output_schema"]], "output_tags (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.output_tags"]], "parents_with_dependencies (merlin.dag.node property)": [[2, "merlin.dag.Node.parents_with_dependencies"]], "remove_child() (merlin.dag.node method)": [[2, "merlin.dag.Node.remove_child"]], "remove_inputs() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.remove_inputs"]], "remove_inputs() (merlin.dag.node method)": [[2, "merlin.dag.Node.remove_inputs"]], "resolve() (merlin.dag.columnselector method)": [[2, "merlin.dag.ColumnSelector.resolve"]], "selector (merlin.dag.node property)": [[2, "merlin.dag.Node.selector"]], "subgraph() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.subgraph"]], "supports (merlin.dag.baseoperator property)": [[2, "merlin.dag.BaseOperator.supports"]], "tags (merlin.dag.columnselector property)": [[2, "merlin.dag.ColumnSelector.tags"]], "transform() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.transform"]], "validate_schemas() (merlin.dag.baseoperator method)": [[2, "merlin.dag.BaseOperator.validate_schemas"]], "validate_schemas() (merlin.dag.node method)": [[2, "merlin.dag.Node.validate_schemas"]], "dataset (class in merlin.io)": [[3, "merlin.io.Dataset"]], "compute() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.compute"]], "file_partition_map (merlin.io.dataset property)": [[3, "merlin.io.Dataset.file_partition_map"]], "head() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.head"]], "infer_schema() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.infer_schema"]], "merge() (merlin.io.dataset class method)": [[3, "merlin.io.Dataset.merge"]], "npartitions (merlin.io.dataset property)": [[3, "merlin.io.Dataset.npartitions"]], "num_rows (merlin.io.dataset property)": [[3, "merlin.io.Dataset.num_rows"]], "partition_lens (merlin.io.dataset property)": [[3, "merlin.io.Dataset.partition_lens"]], "persist() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.persist"]], "regenerate_dataset() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.regenerate_dataset"]], "repartition() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.repartition"]], "sample_dtypes() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.sample_dtypes"]], "shuffle_by_keys() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.shuffle_by_keys"]], "tail() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.tail"]], "to_cpu() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_cpu"]], "to_ddf() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_ddf"]], "to_gpu() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_gpu"]], "to_hugectr() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_hugectr"]], "to_iter() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_iter"]], "to_parquet() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.to_parquet"]], "validate_dataset() (merlin.io.dataset method)": [[3, "merlin.io.Dataset.validate_dataset"]], "binary (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.BINARY"]], "binary_classification (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.BINARY_CLASSIFICATION"]], "categorical (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.CATEGORICAL"]], "classification (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.CLASSIFICATION"]], "context (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.CONTEXT"]], "continuous (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.CONTINUOUS"]], "columnschema (class in merlin.schema)": [[4, "merlin.schema.ColumnSchema"]], "id (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.ID"]], "item (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.ITEM"]], "item_id (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.ITEM_ID"]], "list (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.LIST"]], "multi_class (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.MULTI_CLASS"]], "multi_class_classification (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.MULTI_CLASS_CLASSIFICATION"]], "regression (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.REGRESSION"]], "sequence (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.SEQUENCE"]], "session (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.SESSION"]], "session_id (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.SESSION_ID"]], "schema (class in merlin.schema)": [[4, "merlin.schema.Schema"]], "target (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.TARGET"]], "text (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.TEXT"]], "text_tokenized (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.TEXT_TOKENIZED"]], "time (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.TIME"]], "tokenized (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.TOKENIZED"]], "tags (class in merlin.schema)": [[4, "merlin.schema.Tags"]], "user (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.USER"]], "user_id (merlin.schema.tags attribute)": [[4, "merlin.schema.Tags.USER_ID"]], "apply() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.apply"]], "apply_inverse() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.apply_inverse"]], "column_names (merlin.schema.schema property)": [[4, "merlin.schema.Schema.column_names"]], "dims (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.dims"]], "dtype (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.dtype"]], "excluding() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.excluding"]], "excluding_by_name() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.excluding_by_name"]], "excluding_by_tag() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.excluding_by_tag"]], "first (merlin.schema.schema property)": [[4, "merlin.schema.Schema.first"]], "float_domain (merlin.schema.columnschema property)": [[4, "merlin.schema.ColumnSchema.float_domain"]], "get() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.get"]], "int_domain (merlin.schema.columnschema property)": [[4, "merlin.schema.ColumnSchema.int_domain"]], "is_list (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.is_list"]], "is_ragged (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.is_ragged"]], "name (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.name"]], "properties (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.properties"]], "remove_by_tag() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.remove_by_tag"]], "remove_col() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.remove_col"]], "select() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.select"]], "select_by_name() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.select_by_name"]], "select_by_tag() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.select_by_tag"]], "shape (merlin.schema.columnschema property)": [[4, "merlin.schema.ColumnSchema.shape"]], "tags (merlin.schema.columnschema attribute)": [[4, "merlin.schema.ColumnSchema.tags"]], "to_pandas() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.to_pandas"]], "value_count (merlin.schema.columnschema property)": [[4, "merlin.schema.ColumnSchema.value_count"]], "with_dtype() (merlin.schema.columnschema method)": [[4, "merlin.schema.ColumnSchema.with_dtype"]], "with_name() (merlin.schema.columnschema method)": [[4, "merlin.schema.ColumnSchema.with_name"]], "with_properties() (merlin.schema.columnschema method)": [[4, "merlin.schema.ColumnSchema.with_properties"]], "with_shape() (merlin.schema.columnschema method)": [[4, "merlin.schema.ColumnSchema.with_shape"]], "with_tags() (merlin.schema.columnschema method)": [[4, "merlin.schema.ColumnSchema.with_tags"]], "without() (merlin.schema.schema method)": [[4, "merlin.schema.Schema.without"]]}})