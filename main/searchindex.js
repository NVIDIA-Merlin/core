Search.setIndex({"docnames": ["README", "api/generated/merlin.dag.ColumnSelector", "api/generated/merlin.dag.Graph", "api/generated/merlin.dag.Node", "api/generated/merlin.dag.Operator", "api/generated/merlin.io.Dataset", "api/generated/merlin.schema.ColumnSchema", "api/generated/merlin.schema.Schema", "api/generated/merlin.schema.Tags", "api/index", "api/merlin.dag", "api/merlin.io", "api/merlin.schema", "index"], "filenames": ["README.md", "api/generated/merlin.dag.ColumnSelector.rst", "api/generated/merlin.dag.Graph.rst", "api/generated/merlin.dag.Node.rst", "api/generated/merlin.dag.Operator.rst", "api/generated/merlin.io.Dataset.rst", "api/generated/merlin.schema.ColumnSchema.rst", "api/generated/merlin.schema.Schema.rst", "api/generated/merlin.schema.Tags.rst", "api/index.rst", "api/merlin.dag.rst", "api/merlin.io.rst", "api/merlin.schema.rst", "index.rst"], "titles": ["Merlin Core", "merlin.dag.ColumnSelector", "merlin.dag.Graph", "merlin.dag.Node", "merlin.dag.Operator", "merlin.io.Dataset", "merlin.schema.ColumnSchema", "merlin.schema.Schema", "merlin.schema.Tags", "merlin namespace", "Merlin DAG", "Merlin IO", "Merlin Schema", "Merlin Core"], "terms": {"The": [0, 1, 2, 3, 4, 5, 7, 13], "librari": [0, 5, 13], "provid": [0, 1, 3, 4, 6, 7, 13], "util": [0, 13], "nvidia": [0, 13], "like": [0, 2, 3, 5], "nvtabular": [0, 5], "transformers4rec": 0, "model": 0, "For": [0, 5], "exampl": [0, 5], "io": [0, 9], "dataset": [0, 1, 2, 3, 4, 7, 9], "merin": 0, "schema": [0, 1, 2, 3, 4, 5, 9], "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13], "ar": [0, 1, 4, 5, 6, 7], "fundament": 0, "work": [0, 4], "data": [0, 2, 4, 5], "build": 0, "recommend": [0, 5], "system": [0, 5], "c": 0, "rapidsai": 0, "numba": 0, "forg": 0, "python": 0, "3": 0, "7": 0, "cudatoolkit": 0, "11": 0, "2": 0, "As": 0, "i": [0, 3, 5, 6, 7, 13], "includ": [0, 5], "contain": [0, 2, 3, 4, 5, 6, 7], "refer": [0, 5], "document": [0, 5, 13], "page": 0, "inform": [0, 4, 5, 13], "about": [0, 4, 13], "name": [0, 1, 2, 3, 4, 5, 6, 7, 9], "url": 0, "imag": 0, "gpu": [0, 5], "cloud": [0, 5], "catalog": 0, "kei": [0, 4, 5], "compon": 0, "To": [0, 5, 13], "report": 0, "bug": 0, "get": [0, 5, 7, 9], "help": 0, "pleas": 0, "open": 0, "an": [0, 1, 2, 3, 4, 5], "issu": 0, "github": [0, 13], "repo": 0, "str": [1, 2, 3, 4, 5, 6, 7], "list": [1, 2, 3, 4, 5, 6, 7, 8, 9], "none": [1, 3, 4, 5, 6, 7], "subgroup": 1, "tag": [1, 3, 6, 7, 9], "sourc": [1, 2, 3, 4, 5, 6, 7, 8], "base": [1, 2, 3, 4, 5, 6, 7, 8], "object": [1, 2, 3, 4, 5, 6, 7], "A": [1, 2, 3, 4, 5, 6, 7], "describ": [1, 7], "group": [1, 3, 5], "column": [1, 2, 3, 4, 5, 6, 7], "transform": [1, 2, 3, 4, 5, 9], "oper": [1, 2, 3, 5, 9], "graph": [1, 3, 4, 5, 9], "can": [1, 3, 4, 5, 7], "appli": [1, 3, 4, 7, 9], "select": [1, 3, 4, 7, 9], "shift": [1, 3], "which": [1, 2, 3, 4, 5, 7], "return": [1, 2, 3, 4, 5, 6, 7], "new": [1, 3, 5, 6, 7], "node": [1, 2, 4, 9], "thi": [1, 2, 3, 4, 5, 6, 7], "let": [1, 3, 4], "you": [1, 3, 4, 5, 7], "defin": [1, 3, 4, 5], "make": [1, 3], "up": [1, 3], "your": [1, 3], "paramet": [1, 2, 3, 4, 5, 6, 7], "tupl": [1, 6], "from": [1, 2, 3, 4, 5, 7], "input": [1, 2, 3, 4, 5], "element": 1, "string": [1, 4, 5], "indic": [1, 5, 7], "most": 1, "case": [1, 5, 7], "also": [1, 5], "featur": [1, 5], "cross": 1, "altern": [1, 5], "syntax": 1, "togeth": [1, 13], "instead": 1, "nest": [1, 5], "insid": 1, "option": [1, 2, 3, 4, 5, 7], "ani": [1, 2, 4, 5, 7], "least": 1, "one": 1, "consid": 1, "__init__": [1, 2, 3, 4, 5, 6, 7, 8, 9], "method": [1, 2, 3, 4, 5, 6, 7], "attribut": [1, 2, 3, 4, 5, 6, 7, 8], "properti": [1, 2, 3, 4, 5, 6, 7, 9], "all": [1, 3, 4, 5, 7, 9], "grouped_nam": [1, 9], "resolv": [1, 9], "take": [1, 5], "produc": [1, 4, 5], "selector": [1, 3, 4, 7, 9], "how": [1, 5], "occur": 1, "doe": [1, 5], "matter": 1, "filter_column": [1, 9], "other_selector": 1, "narrow": 1, "content": 1, "would": 1, "anoth": 1, "other": [1, 2, 5], "filter": [1, 5], "type": [1, 2, 3, 4, 5, 6, 7], "output_nod": 2, "repres": 2, "compos": 2, "each": [2, 5, 7], "datafram": [2, 4, 5, 6, 7], "subgraph": [2, 5, 9], "input_dtyp": [2, 9], "output_dtyp": [2, 4, 9], "column_map": [2, 3, 4, 9], "construct_schema": [2, 9], "root_schema": [2, 3, 4], "preserve_dtyp": [2, 3], "fals": [2, 3, 4, 5, 7], "given": [2, 4], "determin": [2, 5], "output": [2, 3, 4, 5], "bool": [2, 3, 4, 5, 6, 7], "whether": [2, 5, 6, 7], "keep": [2, 5], "dtype": [2, 3, 4, 5, 6, 9], "mai": [2, 5], "alreadi": [2, 5], "present": [2, 7], "default": [2, 3, 4, 5, 6, 7], "after": [2, 5, 7], "have": [2, 6], "been": 2, "fill": 2, "input_schema": [2, 4, 9], "leaf_nod": [2, 9], "output_schema": [2, 4, 9], "remove_input": [2, 3, 9], "to_remov": 2, "remov": [2, 3, 7], "start": [2, 4, 13], "leaf": 2, "trickl": 2, "down": [2, 5, 7], "look": [2, 5], "when": [2, 3, 5], "found": [2, 7], "must": [2, 5, 6], "propag": 2, "deriv": [2, 5], "array_lik": 2, "same": [2, 3, 5], "classmethod": [2, 3, 5], "get_nodes_by_op_typ": [2, 9], "op_typ": 2, "clear_stat": [2, 9], "calcul": [2, 5], "statist": 2, "statoper": 2, "clear": [2, 4], "want": [3, 7], "": [3, 5], "them": 3, "workflow": [3, 4, 5], "columnselector": [3, 4, 7, 9], "us": [3, 4, 5, 7, 8], "add_depend": [3, 9], "dep": 3, "ad": 3, "depend": [3, 4, 9], "union": [3, 6, 7], "add_par": [3, 9], "parent": [3, 4], "add_child": [3, 9], "child": 3, "remove_child": [3, 9], "compute_schema": [3, 9], "true": [3, 4, 5, 7], "we": [3, 5], "don": [3, 7], "t": [3, 4, 5, 7], "overrid": [3, 4, 5], "current": [3, 4, 5], "validate_schema": [3, 4, 9], "strict_dtyp": [3, 4], "check": [3, 4], "match": [3, 4, 5, 7], "If": [3, 5, 6, 7], "error": 3, "should": [3, 4, 5, 7], "rais": [3, 4, 6, 7], "valueerror": [3, 7], "expect": 3, "doesn": 3, "input_col": 3, "were": 3, "export": [3, 4, 9], "backend": [3, 5], "output_path": [3, 5], "pathlik": [3, 4], "node_id": [3, 4], "int": [3, 4, 5], "version": [3, 4], "1": [3, 4, 5], "directori": [3, 5], "requir": [3, 4, 5], "artifact": [3, 4], "run": [3, 4], "target": [3, 8, 9], "context": [3, 8, 9], "o": 3, "path": [3, 4, 5], "write": [3, 5], "id": [3, 8, 9], "larger": [3, 5], "disambigu": 3, "export_nam": [3, 4, 9], "suppli": [3, 7], "parents_with_depend": [3, 9], "grouped_parents_with_depend": [3, 9], "input_column": [3, 9], "output_column": [3, 9], "dependency_column": [3, 9], "label": [3, 4, 5, 9], "construct_from": [3, 9], "nodabl": 3, "convert": [3, 5, 7], "correspond": [3, 5], "typeerror": [3, 6], "cannot": [3, 5], "compute_selector": [4, 9], "parents_selector": 4, "dependencies_selector": 4, "hook": 4, "sub": 4, "implement": [4, 5], "custom": [4, 5], "logic": [4, 5], "combin": [4, 5], "upstream": 4, "feed": 4, "revis": 4, "compute_input_schema": [4, 9], "parents_schema": 4, "deps_schema": 4, "come": 4, "set": [4, 5, 6], "befor": [4, 5], "col_selector": 4, "compute_output_schema": [4, 9], "prev_output_schema": 4, "valid": [4, 5], "except": 4, "thei": 4, "boolean": 4, "enabl": [4, 5], "strict": 4, "panda": [4, 5, 7], "cudf": [4, 5], "dictarrai": 4, "comput": [4, 5, 9], "map": [4, 5], "reli": 4, "dict": [4, 5, 6], "load_artifact": [4, 9], "artifact_path": 4, "load": [4, 5], "disk": [4, 5], "function": [4, 5, 7], "where": [4, 7], "save_artifact": [4, 9], "save": 4, "reload": 4, "state": 4, "compute_column_schema": [4, 9], "col_nam": [4, 7], "dynamic_dtyp": [4, 9], "is_subgraph": [4, 9], "output_column_nam": [4, 9], "consum": 4, "aren": 4, "part": 4, "main": [4, 5], "extra": 4, "output_tag": [4, 9], "output_properti": [4, 9], "create_nod": [4, 9], "support": [4, 5, 9], "what": 4, "kind": 4, "represent": 4, "supported_format": [4, 9], "dataformat": 4, "common": 4, "english": 4, "identifi": [4, 5], "spell": 4, "modul": 4, "kwarg": [4, 5], "config": 4, "relat": [4, 5], "file": [4, 5], "user": [4, 5, 8, 9], "param": 4, "dictionari": [4, 5], "valu": [4, 5, 6, 7, 8], "pair": 4, "store": [4, 5], "placement": 4, "model_config": 4, "path_or_sourc": 5, "engin": 5, "npartit": [5, 9], "part_siz": 5, "part_mem_fract": 5, "storage_opt": 5, "client": 5, "auto": 5, "cpu": 5, "base_dataset": 5, "univers": 5, "extern": 5, "wrapper": 5, "dataload": 5, "api": 5, "purpos": 5, "abstract": 5, "awai": 5, "raw": 5, "format": 5, "allow": 5, "reliabl": 5, "materi": 5, "dask_cudf": 5, "collect": [5, 7], "iter": [5, 7], "demand": 5, "initi": 5, "varieti": 5, "differ": [5, 6], "argument": 5, "specifi": 5, "either": [5, 6], "parquet": 5, "csv": 5, "first": [5, 7, 9], "suffix": 5, "infer": 5, "data_pq": 5, "file_0": 5, "file_1": 5, "sinc": 5, "leverag": 5, "fsspec": 5, "interfac": 5, "underli": 5, "local": 5, "remot": 5, "read": 5, "storag": 5, "gd": 5, "s3": 5, "appropri": 5, "protocol": 5, "prepend": 5, "special": 5, "pass": 5, "bucket": 5, "anon": 5, "use_ssl": 5, "By": 5, "both": 5, "dask": 5, "maximum": 5, "partit": 5, "size": 5, "roughli": 5, "12": 5, "5": 5, "percent": 5, "total": 5, "memori": 5, "singl": [5, 7], "devic": 5, "chang": 5, "fraction": 5, "specif": 5, "byte": 5, "10": 5, "smaller": 5, "bigfil": 5, "0": 5, "1gb": 5, "note": 5, "liter": 5, "time": [5, 8, 9], "preced": 5, "done": 5, "row": [5, 6], "level": 5, "convers": 5, "therefor": 5, "distribut": 5, "uniform": 5, "balanc": 5, "In": 5, "addit": 5, "handl": 5, "exist": 5, "e": 5, "g": 5, "number": 5, "modifi": 5, "That": 5, "pyarrow": 5, "tabl": 5, "while": 5, "preserv": 5, "creat": [5, 6], "gdf": 5, "ddf": 5, "read_parquet": 5, "ingest": 5, "straightforward": 5, "execut": 5, "mean": 5, "some": 5, "complex": 5, "pre": 5, "process": 5, "yet": 5, "still": 5, "accomplish": 5, "sort": 5, "final": 5, "warn": 5, "global": 5, "signific": 5, "to_ddf": [5, 9], "sort_valu": 5, "user_rank": 5, "ignore_index": 5, "optim": 5, "tip": 5, "dot": 5, "order": 5, "best": 5, "possibl": 5, "perform": 5, "prefer": 5, "around": 5, "128mb": 5, "over": 5, "twice": 5, "slow": 5, "notebook": 5, "origin": 5, "criteo": 5, "pd": [5, 7], "structur": 5, "flat": 5, "datasetengin": 5, "avro": 5, "ignor": 5, "desir": 5, "float": 5, "125": 5, "rel": 5, "capac": 5, "directli": 5, "host": 5, "detect": 5, "further": 5, "experiment": 5, "intern": 5, "unless": 5, "instal": 5, "futur": 5, "NOT": 5, "avail": [5, 13], "stream": 5, "op": 5, "do": 5, "gener": 5, "construct": 5, "instanc": 5, "behavior": 5, "word": 5, "through": 5, "notabl": 5, "aggregate_fil": 5, "latter": 5, "shuffl": 5, "seed": 5, "known": 5, "within": 5, "becaus": 5, "actual": 5, "random": 5, "noth": 5, "std": 5, "file_partition_map": [5, 9], "partition_len": [5, 9], "to_cpu": [5, 9], "to_gpu": [5, 9], "shuffle_by_kei": [5, 9], "hive_data": 5, "so": 5, "uniqu": 5, "move": 5, "back": 5, "hive": 5, "encod": 5, "inspect": 5, "otherwis": 5, "count": 5, "repartit": [5, 9], "partition_s": 5, "onli": [5, 7], "isn": 5, "max": 5, "5mb": 5, "merg": [5, 9], "left": 5, "right": 5, "two": 5, "side": 5, "see": [5, 13], "more": [5, 13], "usag": 5, "ds_1": 5, "ds_2": 5, "ds_merg": 5, "foo": 5, "inner": 5, "to_it": [5, 9], "use_file_metadata": 5, "epoch": 5, "those": 5, "dataframeit": 5, "metadata": [5, 6], "estim": 5, "intermedi": 5, "ha": 5, "multi": 5, "to_parquet": [5, 9], "preserve_fil": 5, "output_fil": 5, "out_files_per_proc": 5, "row_group_s": 5, "num_thread": 5, "cat": 5, "cont": 5, "partition_on": 5, "write_hugectr_keyset": 5, "out": 5, "enum": [5, 8], "than": 5, "randomli": 5, "per_partit": 5, "worker": 5, "split": 5, "append": 5, "distinctli": 5, "per_work": 5, "follow": 5, "procedur": 5, "re": 5, "persist": [5, 9], "result": 5, "full": 5, "improv": 5, "bytesio": 5, "stage": 5, "integ": 5, "product": 5, "cluster": 5, "control": 5, "alwai": 5, "multipli": 5, "chosen": 5, "prohibit": 5, "being": 5, "less": 5, "5000": 5, "necessari": 5, "try": 5, "call": 5, "thread": 5, "dedic": 5, "datatyp": 5, "extens": 5, "orc": 5, "old": 5, "replac": 5, "categor": [5, 8, 9], "continu": [5, 8, 9], "algorithm": 5, "parallel": 5, "minim": 5, "pressur": 5, "segment": 5, "task": 5, "distinct": 5, "Then": 5, "larg": 5, "ideal": 5, "priorit": 5, "concurr": 5, "approach": 5, "hugectr": 5, "keyset": 5, "_hugectr": 5, "veri": 5, "plan": 5, "to_hugectr": [5, 9], "written": 5, "output_files_per_proc": 5, "per": 5, "arg": 5, "head": [5, 9], "tail": [5, 9], "to_npi": [5, 9], "npy": 5, "mode": 5, "num_row": [5, 9], "validate_dataset": [5, 9], "effici": 5, "meet": 5, "now": 5, "criteria": 5, "assert": 5, "add_metadata_fil": 5, "row_group_max_s": 5, "file_min_s": 5, "require_metadata_fil": 5, "parquetdatasetengin": 5, "regenerate_dataset": [5, 9], "output_format": 5, "regener": 5, "contrast": 5, "out_path": 5, "1mib": 5, "file_s": 5, "10mib": 5, "root": 5, "subset": 5, "delai": 5, "infer_schema": [5, 9], "n": 5, "sampl": 5, "sample_dtyp": [5, 9], "annotate_list": 5, "real": 5, "cach": 5, "wa": 5, "tagset": 6, "factori": 6, "is_list": [6, 9], "is_rag": [6, 9], "dim": [6, 9], "dataclass": 6, "initvar": 6, "shape": [6, 9], "with_nam": [6, 9], "copi": [6, 7, 9], "with_tag": [6, 9], "with_properti": [6, 9], "with_dtyp": [6, 9], "np": 6, "vari": 6, "length": 6, "with_shap": [6, 9], "int_domain": [6, 9], "domain": 6, "float_domain": [6, 9], "value_count": [6, 9], "column_schema": 7, "column_nam": [7, 9], "columnschema": [7, 9], "exclud": [7, 9], "non": 7, "apply_invers": [7, 9], "select_by_tag": [7, 9], "pred_fn": 7, "predic": 7, "decid": 7, "receiv": 7, "excluding_by_tag": [7, 9], "_type_": 7, "remove_by_tag": [7, 9], "select_by_nam": [7, 9], "excluding_by_nam": [7, 9], "remove_col": [7, 9], "without": [7, 9], "retriev": 7, "via": 7, "just": 7, "to_panda": [7, 9], "standard": 8, "ecosystem": 8, "sequenc": [8, 9], "text": [8, 9], "token": [8, 9], "embed": [8, 9], "item": [8, 9], "session": [8, 9], "regress": [8, 9], "classif": [8, 9], "binari": [8, 9], "multi_class": [8, 9], "user_id": [8, 9], "item_id": [8, 9], "session_id": [8, 9], "text_token": [8, 9], "binary_classif": [8, 9], "multi_class_classif": [8, 9], "dag": 9, "project": 13, "learn": 13, "introduct": 13, "repositori": 13, "overarch": 13, "bring": 13, "develop": 13, "websit": 13, "our": 13, "http": 13, "com": 13}, "objects": {"": [[9, 0, 0, "-", "merlin"]], "merlin.dag": [[1, 1, 1, "", "ColumnSelector"], [2, 1, 1, "", "Graph"], [3, 1, 1, "", "Node"], [4, 1, 1, "", "Operator"]], "merlin.dag.ColumnSelector": [[1, 2, 1, "", "__init__"], [1, 3, 1, "", "all"], [1, 2, 1, "", "filter_columns"], [1, 3, 1, "", "grouped_names"], [1, 3, 1, "", "names"], [1, 2, 1, "", "resolve"], [1, 3, 1, "", "tags"]], "merlin.dag.Graph": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "clear_stats"], [2, 3, 1, "", "column_mapping"], [2, 2, 1, "", "construct_schema"], [2, 2, 1, "", "get_nodes_by_op_type"], [2, 3, 1, "", "input_dtypes"], [2, 3, 1, "", "input_schema"], [2, 3, 1, "", "leaf_nodes"], [2, 3, 1, "", "output_dtypes"], [2, 3, 1, "", "output_schema"], [2, 2, 1, "", "remove_inputs"], [2, 2, 1, "", "subgraph"]], "merlin.dag.Node": [[3, 2, 1, "", "__init__"], [3, 2, 1, "", "add_child"], [3, 2, 1, "", "add_dependency"], [3, 2, 1, "", "add_parent"], [3, 3, 1, "", "column_mapping"], [3, 2, 1, "", "compute_schemas"], [3, 2, 1, "", "construct_from"], [3, 3, 1, "", "dependency_columns"], [3, 2, 1, "", "export"], [3, 3, 1, "", "export_name"], [3, 2, 1, "", "exportable"], [3, 3, 1, "", "graph"], [3, 3, 1, "", "grouped_parents_with_dependencies"], [3, 3, 1, "", "input_columns"], [3, 3, 1, "", "label"], [3, 3, 1, "", "output_columns"], [3, 3, 1, "", "parents_with_dependencies"], [3, 2, 1, "", "remove_child"], [3, 2, 1, "", "remove_inputs"], [3, 3, 1, "", "selector"], [3, 2, 1, "", "validate_schemas"]], "merlin.dag.Operator": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "column_mapping"], [4, 2, 1, "", "compute_column_schema"], [4, 2, 1, "", "compute_input_schema"], [4, 2, 1, "", "compute_output_schema"], [4, 2, 1, "", "compute_selector"], [4, 2, 1, "", "create_node"], [4, 3, 1, "", "dependencies"], [4, 3, 1, "", "dynamic_dtypes"], [4, 2, 1, "", "export"], [4, 3, 1, "", "export_name"], [4, 3, 1, "", "is_subgraph"], [4, 3, 1, "", "label"], [4, 2, 1, "", "load_artifacts"], [4, 2, 1, "", "output_column_names"], [4, 3, 1, "", "output_dtype"], [4, 3, 1, "", "output_properties"], [4, 3, 1, "", "output_tags"], [4, 2, 1, "", "save_artifacts"], [4, 3, 1, "", "supported_formats"], [4, 3, 1, "", "supports"], [4, 2, 1, "", "transform"], [4, 2, 1, "", "validate_schemas"]], "merlin.io": [[5, 1, 1, "", "Dataset"]], "merlin.io.Dataset": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "compute"], [5, 3, 1, "", "file_partition_map"], [5, 2, 1, "", "head"], [5, 2, 1, "", "infer_schema"], [5, 2, 1, "", "merge"], [5, 3, 1, "", "npartitions"], [5, 3, 1, "", "num_rows"], [5, 3, 1, "", "partition_lens"], [5, 2, 1, "", "persist"], [5, 2, 1, "", "regenerate_dataset"], [5, 2, 1, "", "repartition"], [5, 2, 1, "", "sample_dtypes"], [5, 2, 1, "", "shuffle_by_keys"], [5, 2, 1, "", "tail"], [5, 2, 1, "", "to_cpu"], [5, 2, 1, "", "to_ddf"], [5, 2, 1, "", "to_gpu"], [5, 2, 1, "", "to_hugectr"], [5, 2, 1, "", "to_iter"], [5, 2, 1, "", "to_npy"], [5, 2, 1, "", "to_parquet"], [5, 2, 1, "", "validate_dataset"]], "merlin.schema": [[6, 1, 1, "", "ColumnSchema"], [7, 1, 1, "", "Schema"], [8, 1, 1, "", "Tags"]], "merlin.schema.ColumnSchema": [[6, 2, 1, "", "__init__"], [6, 4, 1, "", "dims"], [6, 4, 1, "", "dtype"], [6, 3, 1, "", "float_domain"], [6, 3, 1, "", "int_domain"], [6, 4, 1, "", "is_list"], [6, 4, 1, "", "is_ragged"], [6, 4, 1, "", "name"], [6, 4, 1, "", "properties"], [6, 3, 1, "", "shape"], [6, 4, 1, "", "tags"], [6, 3, 1, "", "value_count"], [6, 2, 1, "", "with_dtype"], [6, 2, 1, "", "with_name"], [6, 2, 1, "", "with_properties"], [6, 2, 1, "", "with_shape"], [6, 2, 1, "", "with_tags"]], "merlin.schema.Schema": [[7, 2, 1, "", "__init__"], [7, 2, 1, "", "apply"], [7, 2, 1, "", "apply_inverse"], [7, 3, 1, "", "column_names"], [7, 2, 1, "", "copy"], [7, 2, 1, "", "excluding"], [7, 2, 1, "", "excluding_by_name"], [7, 2, 1, "", "excluding_by_tag"], [7, 3, 1, "", "first"], [7, 2, 1, "", "get"], [7, 2, 1, "", "remove_by_tag"], [7, 2, 1, "", "remove_col"], [7, 2, 1, "", "select"], [7, 2, 1, "", "select_by_name"], [7, 2, 1, "", "select_by_tag"], [7, 2, 1, "", "to_pandas"], [7, 2, 1, "", "without"]], "merlin.schema.Tags": [[8, 4, 1, "", "BINARY"], [8, 4, 1, "", "BINARY_CLASSIFICATION"], [8, 4, 1, "", "CATEGORICAL"], [8, 4, 1, "", "CLASSIFICATION"], [8, 4, 1, "", "CONTEXT"], [8, 4, 1, "", "CONTINUOUS"], [8, 4, 1, "", "EMBEDDING"], [8, 4, 1, "", "ID"], [8, 4, 1, "", "ITEM"], [8, 4, 1, "", "ITEM_ID"], [8, 4, 1, "", "LIST"], [8, 4, 1, "", "MULTI_CLASS"], [8, 4, 1, "", "MULTI_CLASS_CLASSIFICATION"], [8, 4, 1, "", "REGRESSION"], [8, 4, 1, "", "SEQUENCE"], [8, 4, 1, "", "SESSION"], [8, 4, 1, "", "SESSION_ID"], [8, 4, 1, "", "TARGET"], [8, 4, 1, "", "TEXT"], [8, 4, 1, "", "TEXT_TOKENIZED"], [8, 4, 1, "", "TIME"], [8, 4, 1, "", "TOKENIZED"], [8, 4, 1, "", "USER"], [8, 4, 1, "", "USER_ID"], [8, 2, 1, "", "__init__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"merlin": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "core": [0, 13], "instal": 0, "us": 0, "pip": 0, "conda": 0, "run": 0, "docker": 0, "feedback": 0, "support": 0, "dag": [1, 2, 3, 4, 10], "columnselector": 1, "graph": 2, "node": 3, "oper": 4, "io": [5, 11], "dataset": 5, "schema": [6, 7, 8, 12], "columnschema": 6, "tag": 8, "namespac": 9, "subpackag": 9, "relat": 13, "resourc": 13, "index": 13}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Merlin Core": [[0, "merlin-core"], [13, "merlin-core"]], "Installation": [[0, "installation"]], "Installing Merlin Core Using Pip": [[0, "installing-merlin-core-using-pip"]], "Installing Merlin Core Using Conda": [[0, "installing-merlin-core-using-conda"]], "Running Merlin Core with Docker": [[0, "running-merlin-core-with-docker"]], "Feedback and Support": [[0, "feedback-and-support"]], "merlin.dag.ColumnSelector": [[1, "merlin-dag-columnselector"]], "merlin.dag.Graph": [[2, "merlin-dag-graph"]], "merlin.dag.Node": [[3, "merlin-dag-node"]], "merlin.dag.Operator": [[4, "merlin-dag-operator"]], "merlin.io.Dataset": [[5, "merlin-io-dataset"]], "merlin.schema.ColumnSchema": [[6, "merlin-schema-columnschema"]], "merlin.schema.Schema": [[7, "merlin-schema-schema"]], "merlin.schema.Tags": [[8, "merlin-schema-tags"]], "merlin namespace": [[9, "merlin-namespace"]], "Subpackages": [[9, "subpackages"]], "Merlin DAG": [[10, "merlin-dag"]], "Merlin IO": [[11, "merlin-io"]], "Merlin Schema": [[12, "merlin-schema"]], "Related Resources": [[13, "related-resources"]], "Index": [[13, "index"]]}, "indexentries": {"columnselector (class in merlin.dag)": [[1, "merlin.dag.ColumnSelector"]], "__init__() (merlin.dag.columnselector method)": [[1, "merlin.dag.ColumnSelector.__init__"]], "all (merlin.dag.columnselector property)": [[1, "merlin.dag.ColumnSelector.all"]], "filter_columns() (merlin.dag.columnselector method)": [[1, "merlin.dag.ColumnSelector.filter_columns"]], "grouped_names (merlin.dag.columnselector property)": [[1, "merlin.dag.ColumnSelector.grouped_names"]], "names (merlin.dag.columnselector property)": [[1, "merlin.dag.ColumnSelector.names"]], "resolve() (merlin.dag.columnselector method)": [[1, "merlin.dag.ColumnSelector.resolve"]], "tags (merlin.dag.columnselector property)": [[1, "merlin.dag.ColumnSelector.tags"]], "graph (class in merlin.dag)": [[2, "merlin.dag.Graph"]], "__init__() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.__init__"]], "clear_stats() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.clear_stats"]], "column_mapping (merlin.dag.graph property)": [[2, "merlin.dag.Graph.column_mapping"]], "construct_schema() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.construct_schema"]], "get_nodes_by_op_type() (merlin.dag.graph class method)": [[2, "merlin.dag.Graph.get_nodes_by_op_type"]], "input_dtypes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.input_dtypes"]], "input_schema (merlin.dag.graph property)": [[2, "merlin.dag.Graph.input_schema"]], "leaf_nodes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.leaf_nodes"]], "output_dtypes (merlin.dag.graph property)": [[2, "merlin.dag.Graph.output_dtypes"]], "output_schema (merlin.dag.graph property)": [[2, "merlin.dag.Graph.output_schema"]], "remove_inputs() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.remove_inputs"]], "subgraph() (merlin.dag.graph method)": [[2, "merlin.dag.Graph.subgraph"]], "node (class in merlin.dag)": [[3, "merlin.dag.Node"]], "__init__() (merlin.dag.node method)": [[3, "merlin.dag.Node.__init__"]], "add_child() (merlin.dag.node method)": [[3, "merlin.dag.Node.add_child"]], "add_dependency() (merlin.dag.node method)": [[3, "merlin.dag.Node.add_dependency"]], "add_parent() (merlin.dag.node method)": [[3, "merlin.dag.Node.add_parent"]], "column_mapping (merlin.dag.node property)": [[3, "merlin.dag.Node.column_mapping"]], "compute_schemas() (merlin.dag.node method)": [[3, "merlin.dag.Node.compute_schemas"]], "construct_from() (merlin.dag.node class method)": [[3, "merlin.dag.Node.construct_from"]], "dependency_columns (merlin.dag.node property)": [[3, "merlin.dag.Node.dependency_columns"]], "export() (merlin.dag.node method)": [[3, "merlin.dag.Node.export"]], "export_name (merlin.dag.node property)": [[3, "merlin.dag.Node.export_name"]], "exportable() (merlin.dag.node method)": [[3, "merlin.dag.Node.exportable"]], "graph (merlin.dag.node property)": [[3, "merlin.dag.Node.graph"]], "grouped_parents_with_dependencies (merlin.dag.node property)": [[3, "merlin.dag.Node.grouped_parents_with_dependencies"]], "input_columns (merlin.dag.node property)": [[3, "merlin.dag.Node.input_columns"]], "label (merlin.dag.node property)": [[3, "merlin.dag.Node.label"]], "output_columns (merlin.dag.node property)": [[3, "merlin.dag.Node.output_columns"]], "parents_with_dependencies (merlin.dag.node property)": [[3, "merlin.dag.Node.parents_with_dependencies"]], "remove_child() (merlin.dag.node method)": [[3, "merlin.dag.Node.remove_child"]], "remove_inputs() (merlin.dag.node method)": [[3, "merlin.dag.Node.remove_inputs"]], "selector (merlin.dag.node property)": [[3, "merlin.dag.Node.selector"]], "validate_schemas() (merlin.dag.node method)": [[3, "merlin.dag.Node.validate_schemas"]], "operator (class in merlin.dag)": [[4, "merlin.dag.Operator"]], "__init__() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.__init__"]], "column_mapping() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.column_mapping"]], "compute_column_schema() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.compute_column_schema"]], "compute_input_schema() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.compute_input_schema"]], "compute_output_schema() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.compute_output_schema"]], "compute_selector() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.compute_selector"]], "create_node() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.create_node"]], "dependencies (merlin.dag.operator property)": [[4, "merlin.dag.Operator.dependencies"]], "dynamic_dtypes (merlin.dag.operator property)": [[4, "merlin.dag.Operator.dynamic_dtypes"]], "export() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.export"]], "export_name (merlin.dag.operator property)": [[4, "merlin.dag.Operator.export_name"]], "is_subgraph (merlin.dag.operator property)": [[4, "merlin.dag.Operator.is_subgraph"]], "label (merlin.dag.operator property)": [[4, "merlin.dag.Operator.label"]], "load_artifacts() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.load_artifacts"]], "output_column_names() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.output_column_names"]], "output_dtype (merlin.dag.operator property)": [[4, "merlin.dag.Operator.output_dtype"]], "output_properties (merlin.dag.operator property)": [[4, "merlin.dag.Operator.output_properties"]], "output_tags (merlin.dag.operator property)": [[4, "merlin.dag.Operator.output_tags"]], "save_artifacts() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.save_artifacts"]], "supported_formats (merlin.dag.operator property)": [[4, "merlin.dag.Operator.supported_formats"]], "supports (merlin.dag.operator property)": [[4, "merlin.dag.Operator.supports"]], "transform() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.transform"]], "validate_schemas() (merlin.dag.operator method)": [[4, "merlin.dag.Operator.validate_schemas"]], "dataset (class in merlin.io)": [[5, "merlin.io.Dataset"]], "__init__() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.__init__"]], "compute() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.compute"]], "file_partition_map (merlin.io.dataset property)": [[5, "merlin.io.Dataset.file_partition_map"]], "head() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.head"]], "infer_schema() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.infer_schema"]], "merge() (merlin.io.dataset class method)": [[5, "merlin.io.Dataset.merge"]], "npartitions (merlin.io.dataset property)": [[5, "merlin.io.Dataset.npartitions"]], "num_rows (merlin.io.dataset property)": [[5, "merlin.io.Dataset.num_rows"]], "partition_lens (merlin.io.dataset property)": [[5, "merlin.io.Dataset.partition_lens"]], "persist() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.persist"]], "regenerate_dataset() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.regenerate_dataset"]], "repartition() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.repartition"]], "sample_dtypes() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.sample_dtypes"]], "shuffle_by_keys() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.shuffle_by_keys"]], "tail() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.tail"]], "to_cpu() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_cpu"]], "to_ddf() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_ddf"]], "to_gpu() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_gpu"]], "to_hugectr() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_hugectr"]], "to_iter() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_iter"]], "to_npy() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_npy"]], "to_parquet() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.to_parquet"]], "validate_dataset() (merlin.io.dataset method)": [[5, "merlin.io.Dataset.validate_dataset"]], "columnschema (class in merlin.schema)": [[6, "merlin.schema.ColumnSchema"]], "__init__() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.__init__"]], "dims (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.dims"]], "dtype (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.dtype"]], "float_domain (merlin.schema.columnschema property)": [[6, "merlin.schema.ColumnSchema.float_domain"]], "int_domain (merlin.schema.columnschema property)": [[6, "merlin.schema.ColumnSchema.int_domain"]], "is_list (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.is_list"]], "is_ragged (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.is_ragged"]], "name (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.name"]], "properties (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.properties"]], "shape (merlin.schema.columnschema property)": [[6, "merlin.schema.ColumnSchema.shape"]], "tags (merlin.schema.columnschema attribute)": [[6, "merlin.schema.ColumnSchema.tags"]], "value_count (merlin.schema.columnschema property)": [[6, "merlin.schema.ColumnSchema.value_count"]], "with_dtype() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.with_dtype"]], "with_name() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.with_name"]], "with_properties() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.with_properties"]], "with_shape() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.with_shape"]], "with_tags() (merlin.schema.columnschema method)": [[6, "merlin.schema.ColumnSchema.with_tags"]], "schema (class in merlin.schema)": [[7, "merlin.schema.Schema"]], "__init__() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.__init__"]], "apply() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.apply"]], "apply_inverse() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.apply_inverse"]], "column_names (merlin.schema.schema property)": [[7, "merlin.schema.Schema.column_names"]], "copy() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.copy"]], "excluding() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.excluding"]], "excluding_by_name() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.excluding_by_name"]], "excluding_by_tag() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.excluding_by_tag"]], "first (merlin.schema.schema property)": [[7, "merlin.schema.Schema.first"]], "get() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.get"]], "remove_by_tag() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.remove_by_tag"]], "remove_col() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.remove_col"]], "select() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.select"]], "select_by_name() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.select_by_name"]], "select_by_tag() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.select_by_tag"]], "to_pandas() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.to_pandas"]], "without() (merlin.schema.schema method)": [[7, "merlin.schema.Schema.without"]], "binary (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.BINARY"]], "binary_classification (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.BINARY_CLASSIFICATION"]], "categorical (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.CATEGORICAL"]], "classification (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.CLASSIFICATION"]], "context (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.CONTEXT"]], "continuous (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.CONTINUOUS"]], "embedding (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.EMBEDDING"]], "id (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.ID"]], "item (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.ITEM"]], "item_id (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.ITEM_ID"]], "list (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.LIST"]], "multi_class (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.MULTI_CLASS"]], "multi_class_classification (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.MULTI_CLASS_CLASSIFICATION"]], "regression (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.REGRESSION"]], "sequence (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.SEQUENCE"]], "session (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.SESSION"]], "session_id (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.SESSION_ID"]], "target (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.TARGET"]], "text (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.TEXT"]], "text_tokenized (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.TEXT_TOKENIZED"]], "time (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.TIME"]], "tokenized (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.TOKENIZED"]], "tags (class in merlin.schema)": [[8, "merlin.schema.Tags"]], "user (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.USER"]], "user_id (merlin.schema.tags attribute)": [[8, "merlin.schema.Tags.USER_ID"]], "__init__() (merlin.schema.tags method)": [[8, "merlin.schema.Tags.__init__"]], "merlin": [[9, "module-merlin"]], "module": [[9, "module-merlin"]]}})